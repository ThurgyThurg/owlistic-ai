name: On release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  backend:
    name: Backend Build and Push
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      # Build Golang binary
      - name: Build Golang Binary
        run: |
          cd src/backend
          go build -o owlistic ./cmd/main.go
          
      # Archive Go binary as artifact
      - name: Archive Go Binary
        uses: actions/upload-artifact@v4
        with:
          name: owlistic
          path: src/backend/owlistic
          retention-days: 7
          if-no-files-found: error

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker Image for arm64
      - name: Build Backend Docker Image (ARM64)
        uses: docker/build-push-action@v5
        with:
          push: true
          context: src/backend
          platforms: linux/arm64
          file: src/backend/Dockerfile
          build-args: |
            TARGETARCH=arm64
          tags: daviderutigliano/owlistic:latest,daviderutigliano/owlistic:${{ github.ref_name }}
          cache-from: type=registry,ref=daviderutigliano/owlistic:buildcache-arm64

      # Build Docker Image for amd64
      - name: Build Backend Docker Image (AMD64)
        uses: docker/build-push-action@v5
        with:
          push: true
          context: src/backend
          platforms: linux/amd64
          file: src/backend/Dockerfile
          build-args: |
            TARGETARCH=amd64
          tags: daviderutigliano/owlistic:latest-amd64,daviderutigliano/owlistic:${{ github.ref_name }}-amd64
          cache-from: type=registry,ref=daviderutigliano/owlistic:buildcache-amd64

  frontend:
    name: Frontend Build and Push
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Setup Flutter environment
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # Install Dependencies
      - name: Install Flutter Dependencies
        run: |
          cd src/frontend
          flutter pub get

      # Build Flutter Apps for Multiple Platforms
      - name: Build Client Apps
        run: |
          cd src/frontend

          # Configure Flutter for web
          flutter config --enable-web
          # --enable-android --enable-ios --enable-macos-desktop  --enable-linux-desktop --enable-linux-desktop

          # Get Flutter packages
          flutter pub get

          # Initialize web project (creates index.html if missing)
          flutter create --platforms=web . #,android,ios,macos,linux
          
          # Build web app
          flutter build web --release

          # Build Android app
          # flutter build apk --release

          # Build iOS app
          # flutter build ios --release

          # Build macOS app
          # flutter build macos --release

          # Build macOS app
          # flutter build linux --release
          
      # Archive Flutter web build as artifact
      - name: Archive Web App
        uses: actions/upload-artifact@v4
        with:
          name: frontend-web-build
          path: src/frontend/web
          retention-days: 7
          if-no-files-found: error

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker Image for arm64
      - name: Build Frontend Docker Image (ARM64)
        uses: docker/build-push-action@v5
        with:
          push: true
          context: src/frontend
          platforms: linux/arm64
          file: src/frontend/Dockerfile
          build-args: |
            TARGETARCH=arm64
          tags: daviderutigliano/owlistic-ui:latest,daviderutigliano/owlistic-ui:${{ github.ref_name }}
          cache-from: type=registry,ref=daviderutigliano/owlistic-ui:buildcache-arm64
          
      # Build Docker Image for amd64
      - name: Build Frontend Docker Image (AMD64)
        uses: docker/build-push-action@v5
        with:
          push: true
          context: src/frontend
          platforms: linux/amd64
          file: src/frontend/Dockerfile
          build-args: |
            TARGETARCH=amd64
          tags: daviderutigliano/owlistic-ui:latest-amd64,daviderutigliano/owlistic-ui:${{ github.ref_name }}-amd64
          cache-from: type=registry,ref=daviderutigliano/owlistic-ui:buildcache-amd64

  docs:
    name: Deploy and Publish Docs
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    defaults:
      run:
        working-directory: docs/website
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> "${GITHUB_OUTPUT}"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache.outputs.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-website-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/website/build
