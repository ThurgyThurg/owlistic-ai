services:
  owlistic:
    # image: ghcr.io/owlistic-notes/owlistic:0.1.0
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      chroma:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - APP_ORIGINS=http://localhost*,http://owlistic*,http://owlistic-app*,http://*:8080,http://*:80,${SERVER_URL}*,https://secondbrain.graham29.com,http://secondbrain.graham29.com
      - BROKER_ADDRESS=nats:4222
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_NAME=postgres
      # AI API Keys - these will be read from your environment or .env file
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-5-sonnet-20241022}
      - CHROMA_BASE_URL=http://chroma:8000
      # Optional AI integrations
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-}
      # Single user configuration
      - USER_USERNAME=${USER_USERNAME:-admin}
      - USER_EMAIL=${USER_EMAIL:-admin@owlistic.local}
      - USER_PASSWORD=${USER_PASSWORD:-admin123}
    networks:
      - server
      - events
      - db

  owlistic-app:
    # image: ghcr.io/owlistic-notes/owlistic-app:0.1.0
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
      args:
        - SERVER_URL=${SERVER_URL}
        - FALLBACK_SERVER_URL=${SERVER_URL}
        - USER_EMAIL=${USER_EMAIL}
        - USER_PASSWORD=${USER_PASSWORD}
    ports:
      - "80:80"
    depends_on:
      - owlistic
    networks:
      - server

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  nats:
    image: nats
    command:
      - --http_port
      - "8222"
      - -js
      - -sd
      - /var/lib/nats/data
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - nats_data:/var/lib/nats/data
    networks:
      - events
    healthcheck:
      test: ["CMD-SHELL", "nats-server --version || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  chroma:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    environment:
      - CHROMA_HOST=0.0.0.0
      - CHROMA_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - server
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/heartbeat || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  nats_data:
  chroma_data:

networks:
  server:
    driver: bridge
  events:
    driver: bridge
  db:
    driver: bridge
